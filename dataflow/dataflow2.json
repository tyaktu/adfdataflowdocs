{
	"name": "dataflow2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "trip_data_1csv",
						"type": "DatasetReference"
					},
					"name": "tripdata"
				},
				{
					"dataset": {
						"referenceName": "Trip_Fare_1csv",
						"type": "DatasetReference"
					},
					"name": "tripfare"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "join1"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          medallion as string,",
				"          hack_license as string,",
				"          vendor_id as string,",
				"          rate_code as short,",
				"          store_and_fwd_flag as boolean,",
				"          pickup_datetime as timestamp,",
				"          dropoff_datetime as timestamp,",
				"          passenger_count as short,",
				"          trip_time_in_secs as short,",
				"          trip_distance as double,",
				"          pickup_longitude as double,",
				"          pickup_latitude as double,",
				"          dropoff_longitude as double,",
				"          dropoff_latitude as double",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> tripdata",
				"source(output(",
				"          medallion as string,",
				"          { hack_license} as string,",
				"          { vendor_id} as string,",
				"          { pickup_datetime} as timestamp,",
				"          { payment_type} as string,",
				"          { fare_amount} as double,",
				"          { surcharge} as double,",
				"          { mta_tax} as double,",
				"          { tip_amount} as double,",
				"          { tolls_amount} as double,",
				"          { total_amount} as double",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> tripfare",
				"tripdata, tripfare join(tripdata@medallion == tripfare@medallion,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 select(mapColumn(",
				"          medallion = tripdata@medallion,",
				"          hack_license,",
				"          vendor_id,",
				"          rate_code,",
				"          store_and_fwd_flag,",
				"          pickup_datetime,",
				"          dropoff_datetime,",
				"          passenger_count,",
				"          trip_time_in_secs,",
				"          trip_distance,",
				"          pickup_longitude,",
				"          pickup_latitude,",
				"          dropoff_longitude,",
				"          dropoff_latitude,",
				"          medallion = tripfare@medallion,",
				"          { hack_license},",
				"          { vendor_id},",
				"          { pickup_datetime},",
				"          { payment_type},",
				"          { fare_amount},",
				"          { surcharge},",
				"          { mta_tax},",
				"          { tip_amount},",
				"          { tolls_amount},",
				"          { total_amount}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1"
			]
		}
	}
}