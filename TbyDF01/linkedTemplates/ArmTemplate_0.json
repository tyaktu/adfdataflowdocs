{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "TbyDF01"
		},
		"AzureDataLakeStorageGen2LinkService_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorageGen2LinkService'"
		},
		"TestAzureSynapseAnalytics1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'TestAzureSynapseAnalytics1'"
		},
		"AzureDataLakeStorageGen2LinkService_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://tbydatalakestoragegen2v1.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorageGen2LinkService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "ADLS Gen2 Linki",
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorageGen2LinkService_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorageGen2LinkService_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TestAzureSynapseAnalytics1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "AzureSynapse SQL Pool",
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('TestAzureSynapseAnalytics1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Adf_SourceAvro')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageGen2LinkService",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source (ADF)"
				},
				"annotations": [],
				"type": "Avro",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "userdata1.avro",
						"fileSystem": "datalakestoragegen2-filesystemname"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageGen2LinkService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Adf_SourceCSVDelimitedText')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageGen2LinkService",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source (ADF)"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "user_data.csv",
						"fileSystem": "datalakestoragegen2-filesystemname"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "registration_dttm",
						"type": "String"
					},
					{
						"name": "id",
						"type": "String"
					},
					{
						"name": "first_name",
						"type": "String"
					},
					{
						"name": "last_name",
						"type": "String"
					},
					{
						"name": "email",
						"type": "String"
					},
					{
						"name": "gender",
						"type": "String"
					},
					{
						"name": "ip_address",
						"type": "String"
					},
					{
						"name": "cc",
						"type": "String"
					},
					{
						"name": "country",
						"type": "String"
					},
					{
						"name": "birthdate",
						"type": "String"
					},
					{
						"name": "salary",
						"type": "String"
					},
					{
						"name": "title",
						"type": "String"
					},
					{
						"name": "comments",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageGen2LinkService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Adf_SourceJSON')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageGen2LinkService",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source (ADF)"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "books.json",
						"fileSystem": "datalakestoragegen2-filesystemname"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"id": {
							"type": "string"
						},
						"cat": {
							"type": "string"
						},
						"name": {
							"type": "string"
						},
						"author": {
							"type": "string"
						},
						"series_t": {
							"type": "string"
						},
						"sequence_i": {
							"type": "integer"
						},
						"genre_s": {
							"type": "string"
						},
						"inStock": {
							"type": "boolean"
						},
						"price": {
							"type": "number"
						},
						"pages_i": {
							"type": "integer"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageGen2LinkService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Adf_SourceParquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageGen2LinkService",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source (ADF)"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "userdata1.parquet",
						"fileSystem": "datalakestoragegen2-filesystemname"
					},
					"compressionCodec": "none"
				},
				"schema": [
					{
						"name": "registration_dttm",
						"type": "INT96"
					},
					{
						"name": "id",
						"type": "INT32"
					},
					{
						"name": "first_name",
						"type": "UTF8"
					},
					{
						"name": "last_name",
						"type": "UTF8"
					},
					{
						"name": "email",
						"type": "UTF8"
					},
					{
						"name": "gender",
						"type": "UTF8"
					},
					{
						"name": "ip_address",
						"type": "UTF8"
					},
					{
						"name": "cc",
						"type": "UTF8"
					},
					{
						"name": "country",
						"type": "UTF8"
					},
					{
						"name": "birthdate",
						"type": "UTF8"
					},
					{
						"name": "salary",
						"type": "DOUBLE"
					},
					{
						"name": "title",
						"type": "UTF8"
					},
					{
						"name": "comments",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageGen2LinkService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSynapseAnalyticsTable1_AVRO')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TestAzureSynapseAnalytics1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Sink (Synapse)"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "registration_dttm",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "first_name",
						"type": "varchar"
					},
					{
						"name": "last_name",
						"type": "varchar"
					},
					{
						"name": "email",
						"type": "varchar"
					},
					{
						"name": "gender",
						"type": "varchar"
					},
					{
						"name": "ip_address",
						"type": "varchar"
					},
					{
						"name": "cc",
						"type": "varchar"
					},
					{
						"name": "country",
						"type": "varchar"
					},
					{
						"name": "birthdate",
						"type": "varchar"
					},
					{
						"name": "salary",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "title",
						"type": "varchar"
					},
					{
						"name": "comments",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "UserData"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TestAzureSynapseAnalytics1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSynapseAnalyticsTable1_CSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TestAzureSynapseAnalytics1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Sink (Synapse)"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "registration_dttm",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "first_name",
						"type": "varchar"
					},
					{
						"name": "last_name",
						"type": "varchar"
					},
					{
						"name": "email",
						"type": "varchar"
					},
					{
						"name": "gender",
						"type": "varchar"
					},
					{
						"name": "ip_address",
						"type": "varchar"
					},
					{
						"name": "cc",
						"type": "varchar"
					},
					{
						"name": "country",
						"type": "varchar"
					},
					{
						"name": "birthdate",
						"type": "varchar"
					},
					{
						"name": "salary",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "title",
						"type": "varchar"
					},
					{
						"name": "comments",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "UserData_CSV"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TestAzureSynapseAnalytics1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSynapseAnalyticsTable1_JSON')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TestAzureSynapseAnalytics1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Sink (Synapse)"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "registration_dttm",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "first_name",
						"type": "varchar"
					},
					{
						"name": "last_name",
						"type": "varchar"
					},
					{
						"name": "email",
						"type": "varchar"
					},
					{
						"name": "gender",
						"type": "varchar"
					},
					{
						"name": "ip_address",
						"type": "varchar"
					},
					{
						"name": "cc",
						"type": "varchar"
					},
					{
						"name": "country",
						"type": "varchar"
					},
					{
						"name": "birthdate",
						"type": "varchar"
					},
					{
						"name": "salary",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "title",
						"type": "varchar"
					},
					{
						"name": "comments",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "UserData_JSON"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TestAzureSynapseAnalytics1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSynapseAnalyticsTable1_Parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TestAzureSynapseAnalytics1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Sink (Synapse)"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "registration_dttm",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "first_name",
						"type": "varchar"
					},
					{
						"name": "last_name",
						"type": "varchar"
					},
					{
						"name": "email",
						"type": "varchar"
					},
					{
						"name": "gender",
						"type": "varchar"
					},
					{
						"name": "ip_address",
						"type": "varchar"
					},
					{
						"name": "cc",
						"type": "varchar"
					},
					{
						"name": "country",
						"type": "varchar"
					},
					{
						"name": "birthdate",
						"type": "varchar"
					},
					{
						"name": "salary",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "title",
						"type": "varchar"
					},
					{
						"name": "comments",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "UserData"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TestAzureSynapseAnalytics1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageGen2LinkService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "user_data.csv",
						"fileSystem": "datalakestoragegen2-filesystemname"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "registration_dttm",
						"type": "String"
					},
					{
						"name": "id",
						"type": "String"
					},
					{
						"name": "first_name",
						"type": "String"
					},
					{
						"name": "last_name",
						"type": "String"
					},
					{
						"name": "email",
						"type": "String"
					},
					{
						"name": "gender",
						"type": "String"
					},
					{
						"name": "ip_address",
						"type": "String"
					},
					{
						"name": "cc",
						"type": "String"
					},
					{
						"name": "country",
						"type": "String"
					},
					{
						"name": "birthdate",
						"type": "String"
					},
					{
						"name": "salary",
						"type": "String"
					},
					{
						"name": "title",
						"type": "String"
					},
					{
						"name": "comments",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageGen2LinkService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageGen2LinkService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "datalakestoragegen2-filesystemname"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "registration_dttm",
						"type": "INT96"
					},
					{
						"name": "id",
						"type": "INT32"
					},
					{
						"name": "first_name",
						"type": "UTF8"
					},
					{
						"name": "last_name",
						"type": "UTF8"
					},
					{
						"name": "email",
						"type": "UTF8"
					},
					{
						"name": "gender",
						"type": "UTF8"
					},
					{
						"name": "ip_address",
						"type": "UTF8"
					},
					{
						"name": "cc",
						"type": "UTF8"
					},
					{
						"name": "country",
						"type": "UTF8"
					},
					{
						"name": "birthdate",
						"type": "UTF8"
					},
					{
						"name": "salary",
						"type": "DOUBLE"
					},
					{
						"name": "title",
						"type": "UTF8"
					},
					{
						"name": "comments",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageGen2LinkService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Trip_Fare_1csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageGen2LinkService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "trip_fare_1.csv",
						"folderPath": "Resources",
						"fileSystem": "datalakestoragegen2-filesystemname"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageGen2LinkService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trip_data_1csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageGen2LinkService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "trip_data_1.csv",
						"folderPath": "Resources",
						"fileSystem": "datalakestoragegen2-filesystemname"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageGen2LinkService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataFlow3MoviesCSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageGen2LinkService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "movies.csv",
						"folderPath": "Resources",
						"fileSystem": "datalakestoragegen2-filesystemname"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "movieId",
						"type": "String"
					},
					{
						"name": "title",
						"type": "String"
					},
					{
						"name": "genres",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageGen2LinkService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataFlow3OutputCSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageGen2LinkService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Resources/DataFlow3",
						"fileSystem": "datalakestoragegen2-filesystemname"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageGen2LinkService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipelineDataLaketoSynapseSQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "ADF içinde oluşturduğum pipieline. ",
				"activities": [
					{
						"name": "CopyActivityDataLaketoSynapseSQL_Parquet",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Adf_SourceParquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSynapseAnalyticsTable1_Parquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyActivityDataLaketoSynapseSQL_CSV",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Adf_SourceCSVDelimitedText",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSynapseAnalyticsTable1_CSV",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyActivityDataLaketoSynapseSQL_JSON",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"writeBehavior": "Insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Adf_SourceJSON",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSynapseAnalyticsTable1_JSON",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-08-05T14:26:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Adf_SourceParquet')]",
				"[concat(variables('factoryId'), '/datasets/AzureSynapseAnalyticsTable1_Parquet')]",
				"[concat(variables('factoryId'), '/datasets/Adf_SourceCSVDelimitedText')]",
				"[concat(variables('factoryId'), '/datasets/AzureSynapseAnalyticsTable1_CSV')]",
				"[concat(variables('factoryId'), '/datasets/Adf_SourceJSON')]",
				"[concat(variables('factoryId'), '/datasets/AzureSynapseAnalyticsTable1_JSON')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DelimitedText1",
								"type": "DatasetReference"
							},
							"name": "source1"
						},
						{
							"dataset": {
								"referenceName": "DelimitedText1",
								"type": "DatasetReference"
							},
							"name": "source2"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Parquet1",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "join1"
						},
						{
							"name": "aggregate1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          registration_dttm as timestamp,",
						"          id as short,",
						"          first_name as string,",
						"          last_name as string,",
						"          email as string,",
						"          gender as string,",
						"          ip_address as string,",
						"          cc as long,",
						"          country as string,",
						"          birthdate as date,",
						"          salary as double,",
						"          title as string,",
						"          comments as string",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source(output(",
						"          registration_dttm as timestamp,",
						"          id as short,",
						"          first_name as string,",
						"          last_name as string,",
						"          email as string,",
						"          gender as string,",
						"          ip_address as string,",
						"          cc as long,",
						"          country as string,",
						"          birthdate as date,",
						"          salary as double,",
						"          title as string,",
						"          comments as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source2",
						"source1, source2 join(source1@id == source2@id,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"join1 aggregate(groupBy(source1@gender),",
						"     salary = avg(source1@salary)) ~> aggregate1",
						"aggregate1 sink(allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     input(",
						"          registration_dttm as timestamp,",
						"          id as integer,",
						"          first_name as string,",
						"          last_name as string,",
						"          email as string,",
						"          gender as string,",
						"          ip_address as string,",
						"          cc as string,",
						"          country as string,",
						"          birthdate as string,",
						"          salary as double,",
						"          title as string,",
						"          comments as string",
						"     ),",
						"     format: 'parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText1')]",
				"[concat(variables('factoryId'), '/datasets/Parquet1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow3')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DataFlow3MoviesCSV",
								"type": "DatasetReference"
							},
							"name": "Movies"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DataFlow3OutputCSV",
								"type": "DatasetReference"
							},
							"name": "MoviesClean"
						}
					],
					"transformations": [
						{
							"name": "YearExtraction"
						}
					],
					"scriptLines": [
						"source(output(",
						"          movieId as integer,",
						"          title as string,",
						"          genres as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> Movies",
						"Movies derive(Year = toInteger(trim(right(title,6),'()')),",
						"          title = toString(left(title,length(title)-6))) ~> YearExtraction",
						"YearExtraction sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['MoviesClean.csv'],",
						"     truncate: true,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> MoviesClean"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DataFlow3MoviesCSV')]",
				"[concat(variables('factoryId'), '/datasets/DataFlow3OutputCSV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataFlow1CSVtoParquet')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"source2": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-08-18T15:25:30Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		}
	]
}